[{"/home/prashant/Desktop/ReminderApp/src/index.js":"1","/home/prashant/Desktop/ReminderApp/src/App.js":"2","/home/prashant/Desktop/ReminderApp/src/store/store.js":"3","/home/prashant/Desktop/ReminderApp/src/store/reminderReducer.js":"4","/home/prashant/Desktop/ReminderApp/src/store/indexReducer.js":"5","/home/prashant/Desktop/ReminderApp/src/store/userReducer.js":"6","/home/prashant/Desktop/ReminderApp/src/routes/Routes.js":"7","/home/prashant/Desktop/ReminderApp/src/components/NavBar.js":"8","/home/prashant/Desktop/ReminderApp/src/components/Dashboard.js":"9","/home/prashant/Desktop/ReminderApp/src/routes/PrivateRoute.js":"10","/home/prashant/Desktop/ReminderApp/src/components/Login.js":"11","/home/prashant/Desktop/ReminderApp/src/components/Signup.js":"12","/home/prashant/Desktop/ReminderApp/src/utilities/localStorage.js":"13","/home/prashant/Desktop/ReminderApp/src/components/AddReminder.js":"14","/home/prashant/Desktop/ReminderApp/src/components/Reminders.js":"15"},{"size":325,"mtime":1682357817507,"results":"16","hashOfConfig":"17"},{"size":227,"mtime":1682357817507,"results":"18","hashOfConfig":"17"},{"size":380,"mtime":1682357817507,"results":"19","hashOfConfig":"17"},{"size":951,"mtime":1682357817507,"results":"20","hashOfConfig":"17"},{"size":498,"mtime":1682357817507,"results":"21","hashOfConfig":"17"},{"size":475,"mtime":1682357817507,"results":"22","hashOfConfig":"17"},{"size":607,"mtime":1682357817507,"results":"23","hashOfConfig":"17"},{"size":629,"mtime":1682357817507,"results":"24","hashOfConfig":"17"},{"size":279,"mtime":1682357817507,"results":"25","hashOfConfig":"17"},{"size":479,"mtime":1682357817507,"results":"26","hashOfConfig":"17"},{"size":2039,"mtime":1682357817507,"results":"27","hashOfConfig":"17"},{"size":2227,"mtime":1682357817507,"results":"28","hashOfConfig":"17"},{"size":899,"mtime":1682357817507,"results":"29","hashOfConfig":"17"},{"size":1909,"mtime":1682359418991,"results":"30","hashOfConfig":"17"},{"size":1592,"mtime":1682359581488,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"hcnble",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/prashant/Desktop/ReminderApp/src/index.js",[],["67","68"],"/home/prashant/Desktop/ReminderApp/src/App.js",[],"/home/prashant/Desktop/ReminderApp/src/store/store.js",[],"/home/prashant/Desktop/ReminderApp/src/store/reminderReducer.js",["69","70"],"import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { getRemindersLocal, setRemindersLocal } from \"../utilities/localStorage\";\r\n\r\nconst reminderSlice = createSlice({\r\n    name: \"reminders\",\r\n    initialState: getRemindersLocal(\"reminders\"),\r\n    reducers: {\r\n        addReminder: (state, action) => {\r\n            state.push(action.payload);\r\n            setRemindersLocal(\"reminders\", JSON.stringify(state));\r\n        },\r\n        deleteReminder: (state, action) => {\r\n            for(let i=0; i<state.length; i++) {\r\n                if(state[i].username == action.payload.username && state[i].text == action.payload.text) {\r\n                    state.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n            setRemindersLocal(\"reminders\", JSON.stringify(state));\r\n        }\r\n    }\r\n})\r\n\r\nexport const { addReminder, deleteReminder } = reminderSlice.actions;\r\n\r\nexport const reminderReducer = reminderSlice.reducer;","/home/prashant/Desktop/ReminderApp/src/store/indexReducer.js",[],"/home/prashant/Desktop/ReminderApp/src/store/userReducer.js",[],"/home/prashant/Desktop/ReminderApp/src/routes/Routes.js",[],"/home/prashant/Desktop/ReminderApp/src/components/NavBar.js",["71","72"],"import { useSelector } from \"react-redux\";\r\nimport { changeLoggedIndex } from \"../store/indexReducer\";\r\nimport { store } from \"../store/store\";\r\nimport \"../styles/NavBar.css\"\r\nimport logout from \"./logout.png\";\r\n\r\nconst NavBar = () => {\r\n    const loggedIndex = useSelector((state => state.indexReducer[0]));\r\n\r\n    const handleLogout = () => {\r\n        store.dispatch(changeLoggedIndex(-1));\r\n    }\r\n\r\n    return(\r\n        <div className=\"navbar\">\r\n            Reminder App\r\n            {loggedIndex != -1 && <img onClick={handleLogout} src = {logout} className=\"logout\" />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar;\r\n","/home/prashant/Desktop/ReminderApp/src/components/Dashboard.js",[],"/home/prashant/Desktop/ReminderApp/src/routes/PrivateRoute.js",["73"],"import { useSelector } from \"react-redux\";\r\nimport { Redirect, Route } from \"react-router\";\r\n\r\nconst PrivateRoute = ({component: Component}) => {\r\n    const loggedIndex = useSelector((state => state.indexReducer[0]));\r\n\r\n    return (\r\n        <Route \r\n            render = { \r\n                () => {\r\n                    return loggedIndex != -1 ? <Component /> : <Redirect to=\"/login\" />\r\n                }\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default PrivateRoute;\r\n","/home/prashant/Desktop/ReminderApp/src/components/Login.js",["74","75"],"import TextField from '@material-ui/core/TextField';\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"../styles/Auth.css\";\r\nimport { store } from '../store/store';\r\nimport { useHistory } from 'react-router';\r\nimport { changeLoggedIndex } from '../store/indexReducer';\r\n\r\nconst Login = () => {\r\n    const history = useHistory();\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const users = store.getState().userReducer;\r\n\r\n    const userChange = (e) => {\r\n        setUsername(e.target.value);\r\n    }\r\n\r\n    const passwordChange = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n    const handleLogin = () => {\r\n        for(let i=0; i<users.length; i++) {\r\n            if(username == users[i].username) {\r\n                if(password == users[i].password) {\r\n                    store.dispatch(changeLoggedIndex(i));\r\n                    history.push(\"/\");\r\n                }\r\n            }\r\n        }\r\n        setUsername(\"\");\r\n        setPassword(\"\");\r\n    }\r\n\r\n    return(\r\n        <div className = \"login-container\">\r\n            <div className = \"login-header\">\r\n                Log In\r\n            </div>\r\n            <div className = \"login-input\">\r\n                <TextField value={username} onChange={userChange} placeholder=\"Username\"  variant = \"outlined\" fullWidth />\r\n            </div>\r\n            <div className = \"login-input\">\r\n                <TextField value={password} onChange={passwordChange} placeholder=\"Password\" type=\"password\"  variant = \"outlined\" fullWidth />\r\n            </div>\r\n            <div className = \"login-button-container\">\r\n                <input onClick={handleLogin} className = \"login-button\" type = \"button\" value = \"Log In\" />\r\n            </div>\r\n            <div className = \"login-already\">\r\n                New User? <Link style = {{textDecoration: \"none\", fontWeight: \"bold\"}} to = \"/signup\">Sign Up</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","/home/prashant/Desktop/ReminderApp/src/components/Signup.js",[],"/home/prashant/Desktop/ReminderApp/src/utilities/localStorage.js",[],"/home/prashant/Desktop/ReminderApp/src/components/AddReminder.js",[],"/home/prashant/Desktop/ReminderApp/src/components/Reminders.js",["76"],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":14,"column":38,"nodeType":"83","messageId":"84","endLine":14,"endColumn":40},{"ruleId":"81","severity":1,"message":"82","line":14,"column":82,"nodeType":"83","messageId":"84","endLine":14,"endColumn":84},{"ruleId":"81","severity":1,"message":"85","line":17,"column":26,"nodeType":"83","messageId":"84","endLine":17,"endColumn":28},{"ruleId":"86","severity":1,"message":"87","line":17,"column":35,"nodeType":"88","endLine":17,"endColumn":99},{"ruleId":"81","severity":1,"message":"85","line":11,"column":40,"nodeType":"83","messageId":"84","endLine":11,"endColumn":42},{"ruleId":"81","severity":1,"message":"82","line":26,"column":25,"nodeType":"83","messageId":"84","endLine":26,"endColumn":27},{"ruleId":"81","severity":1,"message":"82","line":27,"column":29,"nodeType":"83","messageId":"84","endLine":27,"endColumn":31},{"ruleId":"86","severity":1,"message":"87","line":30,"column":33,"nodeType":"88","endLine":30,"endColumn":111},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]