{"ast":null,"code":"var _jsxFileName = \"/home/prashant/Desktop/ReminderApp/src/components/AddReminder.js\",\n    _s = $RefreshSig$();\n\nimport TextField from '@material-ui/core/TextField';\nimport { useState } from 'react';\nimport { addReminder } from '../store/reminderReducer';\nimport { store } from '../store/store';\nimport \"../styles/AddReminder.css\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddReminder = () => {\n  _s();\n\n  const [reminderText, setReminderText] = useState(\"\");\n  const loggedIndex = useSelector(state => state.indexReducer[0]);\n  const users = store.getState().userReducer;\n\n  const handleChange = e => {\n    setReminderText(e.target.value);\n  };\n\n  const handleSubmit = () => {\n    const reminder = {\n      username: users[loggedIndex].username,\n      text: reminderText\n    };\n    store.dispatch(addReminder(reminder));\n    setReminderText(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-reminder\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reminder-text\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-multiline-static\",\n        label: \"Reminder\",\n        multiline: true,\n        rows: 5,\n        variant: \"outlined\",\n        placeholder: \"What's on your mind?\",\n        value: reminderText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-button\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"button\",\n        type: \"button\",\n        value: \"Add Reminder\",\n        onClick: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddReminder, \"9mJ59EwJZAwDf7RwwAw07MR/La8=\", false, function () {\n  return [useSelector];\n});\n\n_c = AddReminder;\nexport default AddReminder;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddReminder\");","map":{"version":3,"sources":["/home/prashant/Desktop/ReminderApp/src/components/AddReminder.js"],"names":["TextField","useState","addReminder","store","useSelector","AddReminder","reminderText","setReminderText","loggedIndex","state","indexReducer","users","getState","userReducer","handleChange","e","target","value","handleSubmit","reminder","username","text","dispatch"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,6BAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,2BAAP;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAMO,WAAW,GAAGJ,WAAW,CAAEK,KAAK,IAAIA,KAAK,CAACC,YAAN,CAAmB,CAAnB,CAAX,CAA/B;AACA,QAAMC,KAAK,GAAGR,KAAK,CAACS,QAAN,GAAiBC,WAA/B;;AACA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxBR,IAAAA,eAAe,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAM;AACvB,UAAMC,QAAQ,GAAG;AACbC,MAAAA,QAAQ,EAAET,KAAK,CAACH,WAAD,CAAL,CAAmBY,QADhB;AAEbC,MAAAA,IAAI,EAAEf;AAFO,KAAjB;AAIAH,IAAAA,KAAK,CAACmB,QAAN,CAAepB,WAAW,CAACiB,QAAD,CAA1B;AACAZ,IAAAA,eAAe,CAAC,EAAD,CAAf;AACH,GAPD;;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI,QAAC,SAAD;AACI,QAAA,EAAE,EAAC,2BADP;AAEI,QAAA,KAAK,EAAC,UAFV;AAGI,QAAA,SAAS,MAHb;AAII,QAAA,IAAI,EAAE,CAJV;AAKI,QAAA,OAAO,EAAC,UALZ;AAMI,QAAA,WAAW,EAAC,sBANhB;AAOI,QAAA,KAAK,EAAED,YAPX;AAQI,QAAA,QAAQ,EAAEQ;AARd;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAcI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACI;AAAO,QAAA,SAAS,EAAC,QAAjB;AAA0B,QAAA,IAAI,EAAC,QAA/B;AAAwC,QAAA,KAAK,EAAC,cAA9C;AAA6D,QAAA,OAAO,EAAEI;AAAtE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CArCD;;GAAMb,W;UAEkBD,W;;;KAFlBC,W;AAuCN,eAAeA,WAAf","sourcesContent":["import TextField from '@material-ui/core/TextField';\r\nimport { useState } from 'react';\r\nimport { addReminder } from '../store/reminderReducer';\r\nimport { store } from '../store/store';\r\nimport \"../styles/AddReminder.css\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst AddReminder = () => {\r\n    const [reminderText, setReminderText] = useState(\"\");\r\n    const loggedIndex = useSelector((state => state.indexReducer[0]));\r\n    const users = store.getState().userReducer;\r\n    const handleChange = (e) => {\r\n        setReminderText(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        const reminder = {\r\n            username: users[loggedIndex].username,\r\n            text: reminderText\r\n        }\r\n        store.dispatch(addReminder(reminder))\r\n        setReminderText(\"\");\r\n    }\r\n\r\n    return(\r\n        <div className=\"add-reminder\">\r\n            <div className=\"reminder-text\">\r\n                <TextField\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"Reminder\"\r\n                    multiline\r\n                    rows={5}\r\n                    variant=\"outlined\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    value={reminderText}\r\n                    onChange={handleChange}\r\n                />\r\n                <input type=\"text\" />\r\n            </div>\r\n            <div className=\"add-button\">\r\n                <input className=\"button\" type=\"button\" value=\"Add Reminder\" onClick={handleSubmit} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddReminder;\r\n"]},"metadata":{},"sourceType":"module"}