{"ast":null,"code":"var _jsxFileName = \"/home/prashant/Desktop/ReminderApp/src/routes/PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\nimport { Redirect, Route } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component\n}) => {\n  _s();\n\n  const loggedIndex = useSelector(state => state.indexReducer[0]);\n  return /*#__PURE__*/_jsxDEV(Route, {\n    render: () => {\n      return loggedIndex != -1 ? /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 48\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 64\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PrivateRoute, \"/y//cetkBviR5JcBFbcr5eRx7gQ=\", false, function () {\n  return [useSelector];\n});\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/home/prashant/Desktop/ReminderApp/src/routes/PrivateRoute.js"],"names":["useSelector","Redirect","Route","PrivateRoute","component","Component","loggedIndex","state","indexReducer"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,cAAhC;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC;AAAZ,CAAD,KAA4B;AAAA;;AAC7C,QAAMC,WAAW,GAAGN,WAAW,CAAEO,KAAK,IAAIA,KAAK,CAACC,YAAN,CAAmB,CAAnB,CAAX,CAA/B;AAEA,sBACI,QAAC,KAAD;AACI,IAAA,MAAM,EACF,MAAM;AACF,aAAOF,WAAW,IAAI,CAAC,CAAhB,gBAAoB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAApB,gBAAoC,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAA3C;AACH;AAJT;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAZD;;GAAMH,Y;UACkBH,W;;;KADlBG,Y;AAcN,eAAeA,YAAf","sourcesContent":["import { useSelector } from \"react-redux\";\r\nimport { Redirect, Route } from \"react-router\";\r\n\r\nconst PrivateRoute = ({component: Component}) => {\r\n    const loggedIndex = useSelector((state => state.indexReducer[0]));\r\n\r\n    return (\r\n        <Route \r\n            render = { \r\n                () => {\r\n                    return loggedIndex != -1 ? <Component /> : <Redirect to=\"/login\" />\r\n                }\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default PrivateRoute;\r\n"]},"metadata":{},"sourceType":"module"}