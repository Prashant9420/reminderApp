{"ast":null,"code":"var _jsxFileName = \"/home/prashant/Desktop/ReminderApp/src/components/Reminders.js\",\n    _s = $RefreshSig$();\n\nimport \"../styles/Reminders.css\";\nimport \"../styles/Card.css\";\nimport { useSelector } from \"react-redux\";\nimport { store } from \"../store/store\";\nimport cancel from \"./cancel.png\";\nimport { deleteReminder } from \"../store/reminderReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reminders = () => {\n  _s();\n\n  const reminders = useSelector(state => state.reminderReducer);\n  const loggedIndex = useSelector(state => state.indexReducer[0]);\n  const users = store.getState().userReducer;\n\n  const handleDelete = reminder => {\n    store.dispatch(deleteReminder(reminder));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reminders\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reminders-header\",\n      children: \"Upcoming Reminders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: reminders.map(reminder => {\n        return reminder.username === users[loggedIndex].username && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: cancel,\n              className: \"delete\",\n              onClick: () => handleDelete(reminder)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 33\n            }, this), reminder.text, reminder.date, \"setReminderText(\\\"\\\");\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Reminders, \"Cg9972t+f/poJpt0dYgbv0RefmM=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Reminders;\nexport default Reminders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reminders\");","map":{"version":3,"sources":["/home/prashant/Desktop/ReminderApp/src/components/Reminders.js"],"names":["useSelector","store","cancel","deleteReminder","Reminders","reminders","state","reminderReducer","loggedIndex","indexReducer","users","getState","userReducer","handleDelete","reminder","dispatch","map","username","text","date"],"mappings":";;;AAAA,OAAO,yBAAP;AACA,OAAO,oBAAP;AACA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,cAAT,QAA+B,0BAA/B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAMC,SAAS,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,eAAlB,CAA7B;AACA,QAAMC,WAAW,GAAGR,WAAW,CAAEM,KAAK,IAAIA,KAAK,CAACG,YAAN,CAAmB,CAAnB,CAAX,CAA/B;AACA,QAAMC,KAAK,GAAGT,KAAK,CAACU,QAAN,GAAiBC,WAA/B;;AAEA,QAAMC,YAAY,GAAIC,QAAD,IAAc;AAC/Bb,IAAAA,KAAK,CAACc,QAAN,CAAeZ,cAAc,CAACW,QAAD,CAA7B;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBAEIT,SAAS,CAACW,GAAV,CAAeF,QAAD,IAAY;AACtB,eACIA,QAAQ,CAACG,QAAT,KAAsBP,KAAK,CAACF,WAAD,CAAL,CAAmBS,QAAzC,iBACA;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oCACI;AAAK,cAAA,GAAG,EAAEf,MAAV;AAAkB,cAAA,SAAS,EAAC,QAA5B;AAAqC,cAAA,OAAO,EAAE,MAAMW,YAAY,CAACC,QAAD;AAAhE;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEKA,QAAQ,CAACI,IAFd,EAGKJ,QAAQ,CAACK,IAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAYH,OAbD;AAFJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CAlCD;;GAAMf,S;UACgBJ,W,EACEA,W;;;KAFlBI,S;AAoCN,eAAeA,SAAf","sourcesContent":["import \"../styles/Reminders.css\";\r\nimport \"../styles/Card.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { store } from \"../store/store\";\r\nimport cancel from \"./cancel.png\"\r\nimport { deleteReminder } from \"../store/reminderReducer\";\r\n\r\nconst Reminders = () => {\r\n    const reminders = useSelector((state) => state.reminderReducer); \r\n    const loggedIndex = useSelector((state => state.indexReducer[0]));\r\n    const users = store.getState().userReducer;\r\n\r\n    const handleDelete = (reminder) => {\r\n        store.dispatch(deleteReminder(reminder));\r\n    }\r\n\r\n    return(\r\n        <div className=\"reminders\">\r\n            <div className=\"reminders-header\">\r\n                Upcoming Reminders\r\n            </div>\r\n            <div className=\"row\">\r\n            {\r\n                reminders.map((reminder)=>{\r\n                    return(\r\n                        reminder.username === users[loggedIndex].username &&\r\n                        <div className=\"column\">\r\n                            <div className=\"card\">\r\n                                <img src={cancel} className=\"delete\" onClick={() => handleDelete(reminder)} />\r\n                                {reminder.text}\r\n                                {reminder.date}\r\n        setReminderText(\"\");\r\n\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reminders;\r\n"]},"metadata":{},"sourceType":"module"}