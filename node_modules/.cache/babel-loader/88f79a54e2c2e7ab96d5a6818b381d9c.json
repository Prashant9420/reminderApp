{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { getRemindersLocal, setRemindersLocal } from \"../utilities/localStorage\";\nconst reminderSlice = createSlice({\n  name: \"reminders\",\n  initialState: getRemindersLocal(\"reminders\"),\n  reducers: {\n    addReminder: (state, action) => {\n      state.push(action.payload);\n      setRemindersLocal(\"reminders\", JSON.stringify(state));\n    },\n    deleteReminder: (state, action) => {\n      for (let i = 0; i < state.length; i++) {\n        if (state[i].username == action.payload.username && state[i].text == action.payload.text) {\n          state.splice(i, 1);\n          break;\n        }\n      }\n\n      setRemindersLocal(\"reminders\", JSON.stringify(state));\n    }\n  }\n});\nexport const {\n  addReminder,\n  deleteReminder\n} = reminderSlice.actions;\nexport const reminderReducer = reminderSlice.reducer;","map":{"version":3,"sources":["/home/prashant/Desktop/ReminderApp/src/store/reminderReducer.js"],"names":["createSlice","getRemindersLocal","setRemindersLocal","reminderSlice","name","initialState","reducers","addReminder","state","action","push","payload","JSON","stringify","deleteReminder","i","length","username","text","splice","actions","reminderReducer","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAqD,2BAArD;AAEA,MAAMC,aAAa,GAAGH,WAAW,CAAC;AAC9BI,EAAAA,IAAI,EAAE,WADwB;AAE9BC,EAAAA,YAAY,EAAEJ,iBAAiB,CAAC,WAAD,CAFD;AAG9BK,EAAAA,QAAQ,EAAE;AACNC,IAAAA,WAAW,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5BD,MAAAA,KAAK,CAACE,IAAN,CAAWD,MAAM,CAACE,OAAlB;AACAT,MAAAA,iBAAiB,CAAC,WAAD,EAAcU,IAAI,CAACC,SAAL,CAAeL,KAAf,CAAd,CAAjB;AACH,KAJK;AAKNM,IAAAA,cAAc,EAAE,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAC/B,WAAI,IAAIM,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACP,KAAK,CAACQ,MAArB,EAA6BD,CAAC,EAA9B,EAAkC;AAC9B,YAAGP,KAAK,CAACO,CAAD,CAAL,CAASE,QAAT,IAAqBR,MAAM,CAACE,OAAP,CAAeM,QAApC,IAAgDT,KAAK,CAACO,CAAD,CAAL,CAASG,IAAT,IAAiBT,MAAM,CAACE,OAAP,CAAeO,IAAnF,EAAyF;AACrFV,UAAAA,KAAK,CAACW,MAAN,CAAaJ,CAAb,EAAgB,CAAhB;AACA;AACH;AACJ;;AACDb,MAAAA,iBAAiB,CAAC,WAAD,EAAcU,IAAI,CAACC,SAAL,CAAeL,KAAf,CAAd,CAAjB;AACH;AAbK;AAHoB,CAAD,CAAjC;AAoBA,OAAO,MAAM;AAAED,EAAAA,WAAF;AAAeO,EAAAA;AAAf,IAAkCX,aAAa,CAACiB,OAAtD;AAEP,OAAO,MAAMC,eAAe,GAAGlB,aAAa,CAACmB,OAAtC","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { getRemindersLocal, setRemindersLocal } from \"../utilities/localStorage\";\r\n\r\nconst reminderSlice = createSlice({\r\n    name: \"reminders\",\r\n    initialState: getRemindersLocal(\"reminders\"),\r\n    reducers: {\r\n        addReminder: (state, action) => {\r\n            state.push(action.payload);\r\n            setRemindersLocal(\"reminders\", JSON.stringify(state));\r\n        },\r\n        deleteReminder: (state, action) => {\r\n            for(let i=0; i<state.length; i++) {\r\n                if(state[i].username == action.payload.username && state[i].text == action.payload.text) {\r\n                    state.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n            setRemindersLocal(\"reminders\", JSON.stringify(state));\r\n        }\r\n    }\r\n})\r\n\r\nexport const { addReminder, deleteReminder } = reminderSlice.actions;\r\n\r\nexport const reminderReducer = reminderSlice.reducer;"]},"metadata":{},"sourceType":"module"}